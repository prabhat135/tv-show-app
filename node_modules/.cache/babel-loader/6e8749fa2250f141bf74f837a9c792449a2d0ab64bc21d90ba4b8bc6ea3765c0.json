{"ast":null,"code":"var _jsxFileName = \"/home/peelu/Desktop/tv_show_app/src/components/BookingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './css/BookingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookingPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    // Fetch show details again or use the stored details from local storage\n    // ...\n\n    // Assuming 'userDetails' is an object with user information\n    const userDetails = JSON.parse(localStorage.getItem('userDetails'));\n\n    // You can now use userDetails to pre-fill the form fields\n    console.log('Pre-filled movie name:', id);\n    console.log('User details:', userDetails);\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Booking Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"movieName\",\n        children: \"Movie Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        id: \"movieName\",\n        name: \"movieName\",\n        value: id,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(BookingPage, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n_c = BookingPage;\nexport default BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","useEffect","useParams","jsxDEV","_jsxDEV","BookingPage","_s","id","userDetails","JSON","parse","localStorage","getItem","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","value","readOnly","_c","$RefreshReg$"],"sources":["/home/peelu/Desktop/tv_show_app/src/components/BookingPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './css/BookingPage.css';\n\nfunction BookingPage() {\n  const { id } = useParams();\n\n  useEffect(() => {\n    // Fetch show details again or use the stored details from local storage\n    // ...\n\n    // Assuming 'userDetails' is an object with user information\n    const userDetails = JSON.parse(localStorage.getItem('userDetails'));\n\n    // You can now use userDetails to pre-fill the form fields\n    console.log('Pre-filled movie name:', id);\n    console.log('User details:', userDetails);\n  }, [id]);\n\n  return (\n    <div className=\"container\">\n      <h1>Booking Page</h1>\n      <div className=\"form-container\">\n        <label className=\"form-label\" htmlFor=\"movieName\">\n          Movie Name\n        </label>\n        <input\n          className=\"form-input\"\n          type=\"text\"\n          id=\"movieName\"\n          name=\"movieName\"\n          value={id}\n          readOnly\n        />\n\n        {/* Add more form fields as needed... */}\n\n        <button className=\"form-button\">Submit</button>\n      </div>\n    </div>\n  );\n}\n\nexport default BookingPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACd;IACA;;IAEA;IACA,MAAMO,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;;IAEnE;IACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEP,EAAE,CAAC;IACzCM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEN,WAAW,CAAC;EAC3C,CAAC,EAAE,CAACD,EAAE,CAAC,CAAC;EAER,oBACEH,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBZ,OAAA;MAAAY,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBhB,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BZ,OAAA;QAAOW,SAAS,EAAC,YAAY;QAACM,OAAO,EAAC,WAAW;QAAAL,QAAA,EAAC;MAElD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRhB,OAAA;QACEW,SAAS,EAAC,YAAY;QACtBO,IAAI,EAAC,MAAM;QACXf,EAAE,EAAC,WAAW;QACdgB,IAAI,EAAC,WAAW;QAChBC,KAAK,EAAEjB,EAAG;QACVkB,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAIFhB,OAAA;QAAQW,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CArCQD,WAAW;EAAA,QACHH,SAAS;AAAA;AAAAwB,EAAA,GADjBrB,WAAW;AAuCpB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}