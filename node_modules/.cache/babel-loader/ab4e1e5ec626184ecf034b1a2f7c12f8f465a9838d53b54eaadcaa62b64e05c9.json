{"ast":null,"code":"var _jsxFileName = \"/home/peelu/Desktop/tv_show_app/src/components/ShowList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AnimeInfo from './AnimeInfo';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AnimePage(props) {\n  _s();\n  const {\n    animeId\n  } = useParams();\n  const [characters, setCharacters] = useState([]);\n  const [anime, setAnime] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AnimeInfo, {\n      name: anime.name,\n      description: anime.para,\n      imageSrc: `/images/${anime.src}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-evenly flex-wrap my-16 mx-4 \",\n      children: characters.length > 0 && characters.map(character => /*#__PURE__*/_jsxDEV(Card, {\n        title: character.name,\n        desc: character.description,\n        imgSrc: `/images/${character.src}`\n      }, character._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AnimePage, \"IC8wNZaolY3R+e5bbkYv4bmk+zQ=\", false, function () {\n  return [useParams];\n});\n_c = AnimePage;\nexport default AnimePage;\n\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios';\n// import Card from './Card';\n// import './css/ShowList.css'\n\n// function ShowList() {\n//     const [shows, setShows] = useState([]);\n\n//     useEffect(() => {\n//         const fetchShows = async () => {\n//             try {\n//                 const response = await axios.get('https://api.tvmaze.com/search/shows?q=all');\n//                 setShows(response.data);\n//                 console.log(response.data)\n//             } catch (error) {\n//                 console.error('Error fetching data:', error);\n//             }\n//         };\n\n//         fetchShows();\n//     }, []);\n\n//     return (\n//         <div className='main'>\n//             <div className='heading'>\n//                 <h1>Shows List</h1>\n//             </div> \n\n//         <div className=\"container \">\n\n//             {/* <div> */}\n//             {\n//                 shows.length > 0 && shows.map((data,index) => {\n//                     return( <Card type = \"anime\" id = {data.show.id} key = {data.show.id} title={data.show.name} desc = {\"\"} imgSrc = {`/images/${index}.jpg`} />)\n\n//                 })\n//             }\n//             {/* </div>    */}\n//         </div>\n//         </div>\n\n//         // <div>\n//         //   <h1>Show List</h1>\n//         //   {shows.map(show => (\n//         //     <div key={show.show.id}>\n//         //       <h2>{show.show.name}</h2>\n//         //       {/* Display additional details */}\n//         //       <Link to={`/show/${show.show.id}`}>\n//         //         <button>View Summary</button>\n//         //       </Link>\n//         //     </div>\n//         //   ))}\n//         // </div>\n//     );\n// }\n\n// export default ShowList;\nvar _c;\n$RefreshReg$(_c, \"AnimePage\");","map":{"version":3,"names":["React","useState","useEffect","AnimeInfo","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","AnimePage","props","_s","animeId","characters","setCharacters","anime","setAnime","children","name","description","para","imageSrc","src","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","character","Card","title","desc","imgSrc","_id","_c","$RefreshReg$"],"sources":["/home/peelu/Desktop/tv_show_app/src/components/ShowList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AnimeInfo from './AnimeInfo';\nimport { useParams } from 'react-router-dom';\n\nfunction AnimePage(props) {\n  const { animeId } = useParams();\n\n  const [characters, setCharacters] = useState([]);\n  const [anime, setAnime] = useState([]);\n\n  \n\n  return (\n    <>\n      <AnimeInfo name = {anime.name} description = {anime.para} imageSrc = {`/images/${anime.src}`}  />\n      <div className=\"flex justify-evenly flex-wrap my-16 mx-4 \">\n        {characters.length>0 && characters.map((character) => (\n          <Card\n            key={character._id}\n            title={character.name}\n            desc={character.description}\n            imgSrc={`/images/${character.src}`}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default AnimePage;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios';\n// import Card from './Card';\n// import './css/ShowList.css'\n\n// function ShowList() {\n//     const [shows, setShows] = useState([]);\n\n//     useEffect(() => {\n//         const fetchShows = async () => {\n//             try {\n//                 const response = await axios.get('https://api.tvmaze.com/search/shows?q=all');\n//                 setShows(response.data);\n//                 console.log(response.data)\n//             } catch (error) {\n//                 console.error('Error fetching data:', error);\n//             }\n//         };\n\n//         fetchShows();\n//     }, []);\n\n//     return (\n//         <div className='main'>\n//             <div className='heading'>\n//                 <h1>Shows List</h1>\n//             </div> \n\n//         <div className=\"container \">\n            \n//             {/* <div> */}\n//             {\n//                 shows.length > 0 && shows.map((data,index) => {\n//                     return( <Card type = \"anime\" id = {data.show.id} key = {data.show.id} title={data.show.name} desc = {\"\"} imgSrc = {`/images/${index}.jpg`} />)\n                    \n//                 })\n//             }\n//             {/* </div>    */}\n//         </div>\n//         </div>\n\n//         // <div>\n//         //   <h1>Show List</h1>\n//         //   {shows.map(show => (\n//         //     <div key={show.show.id}>\n//         //       <h2>{show.show.name}</h2>\n//         //       {/* Display additional details */}\n//         //       <Link to={`/show/${show.show.id}`}>\n//         //         <button>View Summary</button>\n//         //       </Link>\n//         //     </div>\n//         //   ))}\n//         // </div>\n//     );\n// }\n\n// export default ShowList;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAQ,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE/B,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAItC,oBACEK,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA,CAACH,SAAS;MAACe,IAAI,EAAIH,KAAK,CAACG,IAAK;MAACC,WAAW,EAAIJ,KAAK,CAACK,IAAK;MAACC,QAAQ,EAAK,WAAUN,KAAK,CAACO,GAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjGpB,OAAA;MAAKqB,SAAS,EAAC,2CAA2C;MAAAV,QAAA,EACvDJ,UAAU,CAACe,MAAM,GAAC,CAAC,IAAIf,UAAU,CAACgB,GAAG,CAAEC,SAAS,iBAC/CxB,OAAA,CAACyB,IAAI;QAEHC,KAAK,EAAEF,SAAS,CAACZ,IAAK;QACtBe,IAAI,EAAEH,SAAS,CAACX,WAAY;QAC5Be,MAAM,EAAG,WAAUJ,SAAS,CAACR,GAAI;MAAE,GAH9BQ,SAAS,CAACK,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAInB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAACf,EAAA,CAvBQF,SAAS;EAAA,QACIL,SAAS;AAAA;AAAAgC,EAAA,GADtB3B,SAAS;AAyBlB,eAAeA,SAAS;;AAIxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}